extends layout

block content
  .inner(style="max-width: 2000px; padding: 4rem;")

    if participant && participant.samplyId
      h2= `${layout.notifications} for participant ${participant.samplyId}`
    else
      h2= `${layout.notifications}`
    .card
      if project && project.name
        
        script(src='/javascripts/datepicker/jquery-3.3.1.min.js' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/datetimepicker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/datetimepicker.js' nonce=`${noncevalue}`)
        link(rel='stylesheet', href='/javascripts/datepicker/font-awesome.min.css' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/jquerysctipttop.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/moment-with-locales.min.js' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/daterangepicker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/daterangepicker.min.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/bootstrap-duration-picker.js' nonce=`${noncevalue}`)  
        link(href='/javascripts/datepicker/bootstrap-duration-picker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        
        .notificationsPanel
          p #{l.testing_message}
          h6 #{layout.choose_participants}
          .custom-select-header(style="max-width:300px")
            select(name="activeTarget" id="activeTarget")
              option(value='all' selected=(participant && participant.samplyId)) #{layout.not_all_participants} 
              each part in ids
                option(value=part selected=(participant && participant.samplyId === part) )= part
          p
          h6 #{layout.fill_in_information} 
          p
          h6 #{l.title} 
          p #{layout.title_information}  
          input#titleContent(type='text', value = '')
          h6 #{l.message} 
          input#messageContent(type='text', value = '')
          h6 #{layout.web_link} 
          input#urlContent(type='text', value = '')
          if participant && participant.samplyId
            h6 #{layout.not_participant_id}  
            input#participantId(type='text', value = participant.samplyId readonly, style ="background-color:lightgrey")
          p #{layout.example_web_link}
          
          p#notification_status_schedule(style='visibility:hidden') #{l.registering_busy_message} 
          p #{layout.choose_the_type} 
          #controlButtons(style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr; grid-column-gap: 15px; grid-row-gap: 15px;")
            button(class="buttonContainer" id="scheduleNotification") One-time  
            button(class="buttonContainer" id="randomNotification") One-time (random)
            button(class="buttonContainer" id="intervalNotification") Repeat     
            button(class="buttonContainer" id="individualNotification") User-dependent    
            button(class="buttonContainer" id="randomIndividualNotification") User-dependent (random) 
          
          p
          .notificationContainer(id="scheduleNotificationContainer" style="display:none") 
           
            if participant && participant.samplyId
              p= `${l.one_time_notifications_to_participant_1} ${participant.samplyId}${l.one_time_notifications_to_participant_2}.`
            else 
              p= `${l.one_time_notifications_to_all_1} (${project.name}) ${l.one_time_notifications_to_all_2}`
            
            p #{l.schedule_explanation_2}
            #dateTimePicker  
              .container_picker
                #picker 
                input#dateresult(class='scheduleInput' type='hidden', value='')
                button(type="button" value="Add a field" id="addDateTimePicker") +
            button(id="create_schedule_notification" class="button") #{l.add}
  
          .notificationContainer(id="intervalNotificationContainer" style="display:none")
        
            if participant && participant.samplyId
              p= `${l.regular_notifications_to_participant_1} ${participant.samplyId}${l.regular_notifications_to_participant_2}.`
            else 
              p= `${l.regular_notifications_to_all_1} (${project.name}) ${l.regular_notifications_to_all_2}`
                
            p #{l.interval_explanation_2}
            
            p #{l.interval_explanation_3} 
            input(type="text", name="datetimes_regular")
            p !{l.cron_explanation}  
            #cronintervalPicker_regular(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute}  
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_regular' value="*")
              input(type='text' id='int_hour_regular' value="*")
              input(type='text' id='int_day_regular' value="*")
              input(type='text' id='int_month_regular' value="*")  
              input(type='text' id='int_week_regular' value="*")  
            p  
            button(id="create_interval_notification" class="button") #{l.add}
              
          
          .notificationContainer(id="individualNotificationContainer" style="display:none")
          
            p #{l.individual_explanation_1} 
            p #{l.individual_explanation_2}
            input(type="text" class="form-control" id="duration")
            p !{l.cron_explanation}  
            #cronintervalPicker_individual(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute} 
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_individual' value="*")
              input(type='text' id='int_hour_individual' value="*")
              input(type='text' id='int_day_individual' value="*")
              input(type='text' id='int_month_individual' value="*")  
              input(type='text' id='int_week_individual' value="*")  
            p  
            button(id="create_individual_notification" class="button") #{l.add}
            
          .notificationContainer(id="randomNotificationContainer" style="display:none") 
          
            if participant && participant.samplyId
              p= `${l.one_time_notifications_to_participant_1} ${participant.samplyId}${l.one_time_notifications_to_participant_1}.`
            else 
              p= `${l.one_time_notifications_to_all_1} (${project.name}) ${l.one_time_notifications_to_all_2}`
            
            p #{l.random_onetime_notifications_info}  
            #randomTimePicker  
              .container_picker
                input(type="text", name="random_datetimes_regular")
              button(id="create_random_notification" class="button") #{l.add}
          
          .notificationContainer(id="randomIndividualNotificationContainer" style="display:none") 
            
            p #{l.individual_random_info_1}
            input(type="text" class="form-control" id="durationRandomIndividual")
            p !{l.cron_explanation}
            p #{l.individual_random_info_2}
            h7 #{l.individual_interval_start}   
            #cronintervalPicker_individual(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute} 
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_individual_1' value="*")
              input(type='text' id='int_hour_individual_1' value="*")
              input(type='text' id='int_day_individual_1' value="*")
              input(type='text' id='int_month_individual_1' value="*")  
              input(type='text' id='int_week_individual_1' value="*")  
            p 
            h7 #{l.individual_interval_end}   
            #cronintervalPicker_individual_2(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute} 
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_individual_2' value="*")
              input(type='text' id='int_hour_individual_2' value="*")
              input(type='text' id='int_day_individual_2' value="*")
              input(type='text' id='int_month_individual_2' value="*")  
              input(type='text' id='int_week_individual_2' value="*")  
            p 
             
            button(id="create_random_individual_notification" class="button") #{l.add}
          
        if (project && project.notifications && project.notifications.length > 0)
          h2 #{l.scheduled_notifications} 
          table.table
            thead
              td #{l.table_type} 
              td #{l.table_sending_time} 
              td #{l.table_start_repeat} 
              td #{l.table_start_end} 
              td #{l.table_repeat_interval} 
              td #{l.table_user_time_period} 
              td #{l.table_user_range} 
              td #{l.table_title}  
              td #{l.table_message} 
              td url
              td #{l.table_delete} 
            each notification, i in project.notifications.sort(function(a,b){return a.date - b.date})
              tr
                td= notification.name
                td= (notification.name === 'One-time' || notification.name === 'One-time (random)') ? h.moment.utc(notification.date).local().locale(language).format('MMMM Do YYYY, H:mm') : ''
                td= notification.name === 'Repeat' ? h.moment.utc(notification.int_start).local().locale(language).format('MMMM Do YYYY, H:mm') : ''
                td= notification.name === 'Repeat' ? h.moment.utc(notification.int_end).local().locale(language).format('MMMM Do YYYY, H:mm') : ''
                td= (notification.name === 'Repeat' || notification.name === 'Event-dependent') ? notification.interval.slice(2) : ''
                td= (notification.name === 'Event-dependent' || notification.name === 'Event-dependent (random)') ? `${h.moment.duration(notification.duration).toISOString()} - ${h.moment.duration(notification.duration).humanize()}` : ''
                td= notification.name === 'Event-dependent (random)' ? `${notification.interval.slice(2)} - ${notification.interval_max.slice(2)}` : ''
                td= notification.title 
                td= notification.message
                td= notification.url
                td
                  a(href=`/removenotification/${notification.id}`)
                    != h.icon('remove')
          p  
          button(id="delete_all_notifications" class="button" style="background-color:red; color:white; max-width:300px;") #{l.delete_notifications} 
        
        if participant && participant.samplyId
          script(nonce=`${noncevalue}`).
            document.getElementById('individualNotification').disabled = true;
            document.getElementById('individualNotification').style['color'] = 'lightgrey';
            document.getElementById('randomIndividualNotification').disabled = true;
            document.getElementById('randomIndividualNotification').style['color'] = 'lightgrey';
            
                             
        script(defer type='text/javascript' nonce=`${noncevalue}`).
          $(document).ready( function () {
              // activate function to select participants
              document.getElementById('activeTarget').addEventListener('change', function doThings() {
                const participant = document.getElementById("activeTarget").value;
                if(participant > 0){
                  window.location.href = `/notifications/${participant}`;
                } else {
                  window.location.href = `/notifications`;
                }
              });
              // populate timers
              $('#picker').dateTimePicker({
                selectData: "now",
              });
              $('#interval_picker_starting_date').dateTimePicker();
              $('#interval_picker_ending_date').dateTimePicker();
              $('input[name="datetimes_regular"]').daterangepicker({
                timePicker: true,
                startDate: moment().startOf('hour'),
                endDate: moment().startOf('hour').add(32, 'hour'),
                locale: {
                  format: 'M/DD hh:mm A'
                }
              });
              $('input[name="random_datetimes_regular"]').daterangepicker({
                timePicker: true,
                startDate: moment().startOf('hour'),
                endDate: moment().startOf('hour').add(32, 'hour'),
                locale: {
                  format: 'M/DD hh:mm A'
                }
              });
              $('#duration').durationPicker({
                showSeconds: true
              });
              $('#durationRandomIndividual').durationPicker({
                showSeconds: true
              });
          }) 
          var pickerNum = 1;
          document.addEventListener('DOMContentLoaded', function (){
            document.querySelectorAll('.buttonContainer').addEventListener('click', function changeContainer(){
              document.querySelector(`#scheduleNotificationContainer`).style.display = "none";
              document.querySelector(`#intervalNotificationContainer`).style.display = "none";
              document.querySelector(`#individualNotificationContainer`).style.display = "none";
              document.querySelector(`#randomNotificationContainer`).style.display = "none";
              document.querySelector(`#randomIndividualNotificationContainer`).style.display = "none";
              document.querySelector(`#${this.id}Container`).style.display = "inline-block";
              document.querySelectorAll('.buttonContainer').forEach( b => {b.style.background = "rgba(238, 242, 244, 0.6)"});
              this.style.background = "#11fa71";
            });
            document.getElementById('addDateTimePicker').addEventListener('click', function addPicker() { 
              pickerNum = pickerNum + 1;
              var container = document.getElementById("dateTimePicker");  
              var newPicker = document.createElement('div');
              newPicker.id = `container-picker-${pickerNum}`;
              newPicker.classList.add('container_picker');
              newPicker.style = 'width: 250px; margin: 20px auto;';
              var picker = document.createElement('div');
              picker.id = `picker-${pickerNum}`;
              newPicker.appendChild(picker);
              var input = document.createElement('input');
              input.classList.add('scheduleInput');
              input.type = 'hidden';
              input.value = ''
              input.id = `dateresult-${pickerNum}`
              newPicker.appendChild(input);
              var removePickerBtn = document.createElement('button');
              removePickerBtn.innerText = 'x';
              removePickerBtn.classList.add('removePickerButton');
              removePickerBtn.id = `-${pickerNum}`;
              removePickerBtn.addEventListener('click', removeScheduleDateTimePicker);
              newPicker.appendChild(removePickerBtn);
              container.appendChild(newPicker);
              $(`#picker-${pickerNum}`).dateTimePicker();
            });
          }); 
        
        script(type='text/javascript', src='/schedule/prepare.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/schedule/uniform.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/schedule/interval.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/schedule/individual.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/schedule/randomUniform.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/schedule/user-specific-interval-random.js' nonce=`${noncevalue}`)
        
      else
        p !{l.message_create_project}

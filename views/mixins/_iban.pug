mixin iban()
  
  form#payment-form(action='/charge', method='post')
    .form-row.inline
      .col
        label(for='name')
          | Name
        input#name(name='name', placeholder='Jenny Rosen', required='')
      .col
        label(for='email')
          | Email Address
        input#email(name='email', type='email', placeholder='jenny.rosen@example.com', required='')
    .form-row
      label(for='iban-element')
        | IBAN
      #iban-element
      // A Stripe Element will be inserted here.
    button Submit Payment
    // Used to display form errors.
    #error-message(role='alert')
    // Display mandate acceptance text.
    #mandate-acceptance
      | By providing your IBAN and confirming this payment, you are authorizing
      | Rocketship Inc. and Stripe, our payment service provider, to send
      | instructions to your bank to debit your account and your bank to debit
      | your account in accordance with those instructions. You are entitled to
      | a refund from your bank under the terms and conditions of your agreement
      | with your bank. A refund must be claimed within 8 weeks starting from the
      | date on which your account was debited.
      
  script.
    // Custom styling can be passed to options when creating an Element.
    const style = {
      base: {
        // Add your base input styles here. For example:
        fontSize: '16px',
        color: "#32325d",
      },
    };

    const options = {
      style,
      supportedCountries: ['SEPA'],
      // If you know the country of the customer, you can optionally pass it to
      // the Element as placeholderCountry. The example IBAN that is being used
      // as placeholer will reflect the IBAN format of that country.
      placeholderCountry: 'DE',
    }

    // Create an instance of the iban Element.
    const iban = elements.create('iban', options);

    // Add an instance of the iban Element into the `iban-element` <div>.
    iban.mount('#iban-element');
    
    iban.on('change', ({error}) => {
      const displayError = document.getElementById('error-message');
      if (error) {
        displayError.textContent = error.message;
      } else {
        displayError.textContent = '';
      }
    });
    
    // Create a source or display an error when the form is submitted.
    const form = document.getElementById('payment-form');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const sourceData = {
        type: 'sepa_debit',
        currency: 'eur',
        owner: {
          name: document.querySelector('input[name="name"]').value,
          email: document.querySelector('input[name="email"]').value,
        },
        mandate: {
          // Automatically send a mandate notification email to your customer
          // once the source is charged.
          notification_method: 'email',
        },
      };

      // Call `stripe.createSource` with the IBAN Element and additional options.
      const {source, error} = await stripe.createSource(iban, sourceData);

      if (error) {
        // Inform the customer that there was an error.
        const errorElement = document.getElementById('error-message');
        errorElement.textContent = error.message;
      } else {
        // Send the Source to your server.
        stripeSourceHandler(source);
      }
    });
    
    const stripeSourceHandler = (source) => {
      // Insert the Source ID into the form so it gets submitted to the server.
      const form = document.getElementById('payment-form');
      const hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'stripeSource');
      hiddenInput.setAttribute('value', source.id);
      form.appendChild(hiddenInput);

      // Submit the form.
      form.submit();
    }
        
